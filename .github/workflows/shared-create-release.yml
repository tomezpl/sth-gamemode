on:
  workflow_call:
    inputs:
      version_number_suffix:
        required: true
        type: string
      prerelease:
        required: false
        type: boolean
        default: true

jobs:
  get-version-number:
    runs-on: windows-latest
    outputs:
      versionNumber: ${{steps.readVersion.outputs.sthVersion}}
    steps:
      - uses: actions/checkout@v3
      - name: Get assembly version
        id: readVersion
        shell: pwsh
        run: |
          cd "${{github.workspace}}/src/SurviveTheHuntClient"
          $AssemblyInfo = cat .\Properties\AssemblyInfo.cs
          $STHVersion = ""
          if($${{inputs.prerelease == true}})
          {
            $AssemblyVersion = $AssemblyInfo -match '^\[assembly\: AssemblyVersion\(\"(?<version>\d+\.\d+\.\d+)\.\d+\"\)\]$'
            "${AssemblyVersion}" -match '^\[assembly\: AssemblyVersion\(\"(?<version>\d+\.\d+\.\d+)\.\d+\"\)\]$'
            $STHVersion = "v" + $Matches.version
          }
          else 
          {
            $STHVersion = "${{github.ref_name}}"
          }
          echo ("sthVersion=" + $STHVersion + ${{inputs.version_number_suffix}}) >> $env:GITHUB_OUTPUT

  release:
    permissions:
      contents: write

    needs: get-version-number
  
    env:
      sthArtifactName: sth-gamemode
      sthVersion: ${{needs.get-version-number.outputs.versionNumber}}
    
    runs-on: windows-latest

    steps:
      - uses: actions/checkout@v3
      - uses: microsoft/setup-msbuild@v1.1
      - uses: NuGet/setup-nuget@v1.2.0
      - 
        name: Run NuGet restore
        run: nuget restore sth-gamemode.sln
      - 
        name: Write new version number from tag
        run: |
            cd ./src
            cd SurviveTheHuntClient 
            ../../scripts/update-assembly-version.ps1 ${{env.sthVersion}}
            cd ../SurviveTheHuntServer
            ../../scripts/update-assembly-version.ps1 ${{env.sthVersion}}
        shell: pwsh
      - 
        name: Build
        # Supposedly OutputPath is meant to be relative to the PROJECT file, not cwd or even solution file. https://stackoverflow.com/a/4965607
        run: |
            mkdir artifacts
            msbuild.exe sth-gamemode.sln /p:platform="Any CPU" /p:configuration="Release" /p:OutputPath=..\..\artifacts
      -
        name: Prepare artifacts
        shell: pwsh
        run: Compress-Archive -Path artifacts\* -DestinationPath ${{env.sthArtifactName}}-${{env.sthVersion}}.zip
      -
        if: ${{inputs.prerelease == false}}
        name: Upload build to release
        uses: ncipollo/release-action@v1
        with:
          artifacts: ${{env.sthArtifactName}}-${{env.sthVersion}}.zip
          allowUpdates: true
          omitBodyDuringUpdate: true
          omitDraftDuringUpdate: true
          omitNameDuringUpdate: true
          omitPrereleaseDuringUpdate: true
      - 
        if: ${{inputs.prerelease == true}}
        name: Upload build to run artifacts
        uses: actions/upload-artifact@v3
        with:
          name: ${{env.sthArtifactName}}-${{env.sthVersion}}
          path: artifacts/**/*
